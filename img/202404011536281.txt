

将测试数据同步至237，把控产品出货


方案一 - 手动操作
上位机生成批次测试结果表
人员登录账号并访问页面  ->  选择需录入的结果excel表   -->将excel表数据导入


方案二   
文件读取状态表table1：文件名称   创建时间   更新时间   读取状态（0表示未读  1表示已读   2表示读取失败）  备注
测试结果：excel文件名  条码  测试结果  创建时间

批次机器测试完成的excel表 ，执行某操作（如点击xxx），将excel推送至237服务器 
   
监控共享文件夹，python watchdog  文件新增，将该文件名称 + 时间存入table1 / 上位机构造请求将需要读取的excel文件名称存入数据表table1 

监控表table1-->监控新增/更新行为   /// 监控新增行为,获取新增数据，执行新增数据，而不是每次查询的第一条数据

新增 ： 读取table1数据  
--》存在数据 ：获取第一条记录excel文件名 --> 读取共享文件夹下对应excel文件 --> table2中存在同E_N数据则删除旧数据，将最新数据导入 -->将excel移动至已读文件夹 
              -->将table1中记录read_status更新为已读  --> 监控到update行为，获取table1记录......循环执行
--》不存在数据，则无操作
【该类监控表，容易造成操作冲突：多个地方推送新增，但上一条记录尚在执行中，导致获取的是同一条记录 】
/////  考虑将文件名称存入redis   按照推送顺序执行   记录文件名称/读取状态信息......
               
消息队列   Redis    Celery
python 监控excel新增    -->生产者  ：产生任务并将其添加到任务队列中
消费者：数据库   从任务队列中获取任务并执行
任务队列：数据表   存储待执行的任务的容器

方案一
单台机器测试完成  
--> 上位机构造请求   携带参数（条码，测试结果）发送请求至scan服务端   
--> 缓存请求  
--> 依次执行插入